# interpreter for shell commands (needs to be POSIX compatible)
set shell sh

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

set scrolloff 10
set icons
set incsearch
set incfilter

# preview files
set previewer lf-preview
map i $lf-preview $f | less -R

# move current file or selected files to trash folder
cmd trash &gio trash $fx && lf -remote "send $id reload"
map D trash

# Yank the full path of a file
cmd yank-path $echo "$f" | wl-copy

# Copy a file to the system clipboard
map <c-c> $echo "file://$f" | wl-copy --type text/uri-list

# jump to directory using fzf
cmd fzf-jump ${{
   res="$(fd -aH | fzf --reverse --header='Jump to location')"
   if [ -f "$res" ]; then
     cmd="select"
   elif [ -d "$res" ]; then
     cmd="cd"
   fi
lf -remote "send $id $cmd \"$res\""
}}
map <c-f> :fzf-jump

# Create symlinks
cmd link %{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    if [ "$#" -lt 1 ]; then
        lf -remote "send $id echo no files to link"
        exit 0
    fi
    case "$mode" in
        # symbolically copy mode is indicating a soft link
        copy) ln -sr -t . -- "$@";;
        # while a move mode is indicating a hard link
        move) ln -t . -- "$@";;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}
map P :link

cmd vidir ${{
    printf '%s\n' "$fx" | vidir -
    lf -remote "send $id unselect"
}}

# Rename without changing the extension
map R :rename; cmd-word-back; cmd-left
